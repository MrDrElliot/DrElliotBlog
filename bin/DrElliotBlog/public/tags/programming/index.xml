<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Dr. Elliot</title>
    <link>https://www.dr-elliot.com/tags/programming/</link>
    <description>Recent content in Programming on Dr. Elliot</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Mar 2025 12:34:23 -0500</lastBuildDate>
    <atom:link href="https://www.dr-elliot.com/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fun with V-Tables</title>
      <link>https://www.dr-elliot.com/posts/general/vtable/</link>
      <pubDate>Thu, 27 Mar 2025 12:34:23 -0500</pubDate>
      <guid>https://www.dr-elliot.com/posts/general/vtable/</guid>
      <description>Fun with V-Tables! Have you ever wanted to access a function, but you couldn&amp;rsquo;t because the function is private? :/ Have you wanted to replace a function in a class? Well, look no further! Today we&amp;rsquo;re going to be talking about V-Table manipulation.&#xA;Please note, this is purely for fun and can be dangerous to do in production environments. I don&amp;rsquo;t recommend using it for actual runtime use, but it can be an interesting exercise in how memory manipulation works and how you can use it to your advantage.</description>
    </item>
    <item>
      <title>The dangers of Lambdas</title>
      <link>https://www.dr-elliot.com/posts/general/lambdadangers/</link>
      <pubDate>Fri, 16 Aug 2024 13:46:48 -0500</pubDate>
      <guid>https://www.dr-elliot.com/posts/general/lambdadangers/</guid>
      <description>Using Lambdas in Unreal can be dangerous! Lambdas, or anonymous functions, in Unreal Engine can be very useful for writing concise and flexible code. However, they come with certain dangers, particularly when dealing with the lifetime of objects and capturing variables by reference. Hereâ€™s why:&#xA;1. Capturing by Reference and Object Lifetimes When you use lambdas in Unreal Engine, you might capture variables by reference, which is common for avoiding unnecessary copying.</description>
    </item>
  </channel>
</rss>
